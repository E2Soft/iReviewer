/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-06-27 at 23:19:09 UTC 
 * Modify at your own risk.
 */

package com.appspot.elevated_surge_702.crud;

/**
 * Service definition for Crud (v1).
 *
 * <p>
 * API to manipulate data from clients to server
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CrudRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Crud extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the crud library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://elevated-surge-702.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "crud/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Crud(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Crud(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Comment collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Crud crud = new Crud(...);}
   *   {@code Crud.Comment.List request = crud.comment().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Comment comment() {
    return new Comment();
  }

  /**
   * The "comment" collection of methods.
   */
  public class Comment {

    /**
     * Create a request for the method "comment.insert".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesCommentMessageCollection}
     * @return the request
     */
    public Insert insert(com.appspot.elevated_surge_702.crud.model.MessagesCommentMessageCollection content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends CrudRequest<Void> {

      private static final String REST_PATH = "comment";

      /**
       * Create a request for the method "comment.insert".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesCommentMessageCollection}
       * @since 1.13
       */
      protected Insert(com.appspot.elevated_surge_702.crud.model.MessagesCommentMessageCollection content) {
        super(Crud.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "comment.list".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends CrudRequest<com.appspot.elevated_surge_702.crud.model.MessagesCommentMessageCollection> {

      private static final String REST_PATH = "comment";

      /**
       * Create a request for the method "comment.list".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Crud.this, "GET", REST_PATH, null, com.appspot.elevated_surge_702.crud.model.MessagesCommentMessageCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Group collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Crud crud = new Crud(...);}
   *   {@code Crud.Group.List request = crud.group().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Group group() {
    return new Group();
  }

  /**
   * The "group" collection of methods.
   */
  public class Group {

    /**
     * Create a request for the method "group.delete".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Delete delete() throws java.io.IOException {
      Delete result = new Delete();
      initialize(result);
      return result;
    }

    public class Delete extends CrudRequest<Void> {

      private static final String REST_PATH = "group";

      /**
       * Create a request for the method "group.delete".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Delete() {
        super(Crud.this, "DELETE", REST_PATH, null, Void.class);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("items.uuid")
      private java.util.List<java.lang.String> itemsUuid;

      /**

       */
      public java.util.List<java.lang.String> getItemsUuid() {
        return itemsUuid;
      }

      public Delete setItemsUuid(java.util.List<java.lang.String> itemsUuid) {
        this.itemsUuid = itemsUuid;
        return this;
      }

      @com.google.api.client.util.Key("items.last_modified")
      private java.util.List<java.lang.String> itemsLastModified;

      /**

       */
      public java.util.List<java.lang.String> getItemsLastModified() {
        return itemsLastModified;
      }

      public Delete setItemsLastModified(java.util.List<java.lang.String> itemsLastModified) {
        this.itemsLastModified = itemsLastModified;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "group.insert".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesGroupMessageCollection}
     * @return the request
     */
    public Insert insert(com.appspot.elevated_surge_702.crud.model.MessagesGroupMessageCollection content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends CrudRequest<Void> {

      private static final String REST_PATH = "group";

      /**
       * Create a request for the method "group.insert".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesGroupMessageCollection}
       * @since 1.13
       */
      protected Insert(com.appspot.elevated_surge_702.crud.model.MessagesGroupMessageCollection content) {
        super(Crud.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "group.list".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends CrudRequest<com.appspot.elevated_surge_702.crud.model.MessagesGroupMessageCollection> {

      private static final String REST_PATH = "group";

      /**
       * Create a request for the method "group.list".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Crud.this, "GET", REST_PATH, null, com.appspot.elevated_surge_702.crud.model.MessagesGroupMessageCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Image collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Crud crud = new Crud(...);}
   *   {@code Crud.Image.List request = crud.image().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Image image() {
    return new Image();
  }

  /**
   * The "image" collection of methods.
   */
  public class Image {

    /**
     * Create a request for the method "image.delete".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Delete delete() throws java.io.IOException {
      Delete result = new Delete();
      initialize(result);
      return result;
    }

    public class Delete extends CrudRequest<Void> {

      private static final String REST_PATH = "image";

      /**
       * Create a request for the method "image.delete".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Delete() {
        super(Crud.this, "DELETE", REST_PATH, null, Void.class);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("items.users_changed.time_zone_offset")
      private java.util.List<java.lang.Long> itemsUsersChangedTimeZoneOffset;

      /**

       */
      public java.util.List<java.lang.Long> getItemsUsersChangedTimeZoneOffset() {
        return itemsUsersChangedTimeZoneOffset;
      }

      public Delete setItemsUsersChangedTimeZoneOffset(java.util.List<java.lang.Long> itemsUsersChangedTimeZoneOffset) {
        this.itemsUsersChangedTimeZoneOffset = itemsUsersChangedTimeZoneOffset;
        return this;
      }

      @com.google.api.client.util.Key("items.owner")
      private java.util.List<java.lang.String> itemsOwner;

      /**

       */
      public java.util.List<java.lang.String> getItemsOwner() {
        return itemsOwner;
      }

      public Delete setItemsOwner(java.util.List<java.lang.String> itemsOwner) {
        this.itemsOwner = itemsOwner;
        return this;
      }

      @com.google.api.client.util.Key("items.users_changed.milliseconds")
      private java.util.List<java.lang.Long> itemsUsersChangedMilliseconds;

      /**

       */
      public java.util.List<java.lang.Long> getItemsUsersChangedMilliseconds() {
        return itemsUsersChangedMilliseconds;
      }

      public Delete setItemsUsersChangedMilliseconds(java.util.List<java.lang.Long> itemsUsersChangedMilliseconds) {
        this.itemsUsersChangedMilliseconds = itemsUsersChangedMilliseconds;
        return this;
      }

      @com.google.api.client.util.Key("items.uuid")
      private java.util.List<java.lang.String> itemsUuid;

      /**

       */
      public java.util.List<java.lang.String> getItemsUuid() {
        return itemsUuid;
      }

      public Delete setItemsUuid(java.util.List<java.lang.String> itemsUuid) {
        this.itemsUuid = itemsUuid;
        return this;
      }

      @com.google.api.client.util.Key("items.deleted")
      private java.util.List<java.lang.Boolean> itemsDeleted;

      /**

       */
      public java.util.List<java.lang.Boolean> getItemsDeleted() {
        return itemsDeleted;
      }

      public Delete setItemsDeleted(java.util.List<java.lang.Boolean> itemsDeleted) {
        this.itemsDeleted = itemsDeleted;
        return this;
      }

      @com.google.api.client.util.Key("items.reviews")
      private java.util.List<java.lang.String> itemsReviews;

      /**

       */
      public java.util.List<java.lang.String> getItemsReviews() {
        return itemsReviews;
      }

      public Delete setItemsReviews(java.util.List<java.lang.String> itemsReviews) {
        this.itemsReviews = itemsReviews;
        return this;
      }

      @com.google.api.client.util.Key("items.last_modified.time_zone_offset")
      private java.util.List<java.lang.Long> itemsLastModifiedTimeZoneOffset;

      /**

       */
      public java.util.List<java.lang.Long> getItemsLastModifiedTimeZoneOffset() {
        return itemsLastModifiedTimeZoneOffset;
      }

      public Delete setItemsLastModifiedTimeZoneOffset(java.util.List<java.lang.Long> itemsLastModifiedTimeZoneOffset) {
        this.itemsLastModifiedTimeZoneOffset = itemsLastModifiedTimeZoneOffset;
        return this;
      }

      @com.google.api.client.util.Key("items.name")
      private java.util.List<java.lang.String> itemsName;

      /**

       */
      public java.util.List<java.lang.String> getItemsName() {
        return itemsName;
      }

      public Delete setItemsName(java.util.List<java.lang.String> itemsName) {
        this.itemsName = itemsName;
        return this;
      }

      @com.google.api.client.util.Key("items.reviews_changed.time_zone_offset")
      private java.util.List<java.lang.Long> itemsReviewsChangedTimeZoneOffset;

      /**

       */
      public java.util.List<java.lang.Long> getItemsReviewsChangedTimeZoneOffset() {
        return itemsReviewsChangedTimeZoneOffset;
      }

      public Delete setItemsReviewsChangedTimeZoneOffset(java.util.List<java.lang.Long> itemsReviewsChangedTimeZoneOffset) {
        this.itemsReviewsChangedTimeZoneOffset = itemsReviewsChangedTimeZoneOffset;
        return this;
      }

      @com.google.api.client.util.Key("items.last_modified.milliseconds")
      private java.util.List<java.lang.Long> itemsLastModifiedMilliseconds;

      /**

       */
      public java.util.List<java.lang.Long> getItemsLastModifiedMilliseconds() {
        return itemsLastModifiedMilliseconds;
      }

      public Delete setItemsLastModifiedMilliseconds(java.util.List<java.lang.Long> itemsLastModifiedMilliseconds) {
        this.itemsLastModifiedMilliseconds = itemsLastModifiedMilliseconds;
        return this;
      }

      @com.google.api.client.util.Key("items.users")
      private java.util.List<java.lang.String> itemsUsers;

      /**

       */
      public java.util.List<java.lang.String> getItemsUsers() {
        return itemsUsers;
      }

      public Delete setItemsUsers(java.util.List<java.lang.String> itemsUsers) {
        this.itemsUsers = itemsUsers;
        return this;
      }

      @com.google.api.client.util.Key("items.reviews_changed.milliseconds")
      private java.util.List<java.lang.Long> itemsReviewsChangedMilliseconds;

      /**

       */
      public java.util.List<java.lang.Long> getItemsReviewsChangedMilliseconds() {
        return itemsReviewsChangedMilliseconds;
      }

      public Delete setItemsReviewsChangedMilliseconds(java.util.List<java.lang.Long> itemsReviewsChangedMilliseconds) {
        this.itemsReviewsChangedMilliseconds = itemsReviewsChangedMilliseconds;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "image.insert".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesImageMessageCollection}
     * @return the request
     */
    public Insert insert(com.appspot.elevated_surge_702.crud.model.MessagesImageMessageCollection content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends CrudRequest<Void> {

      private static final String REST_PATH = "image";

      /**
       * Create a request for the method "image.insert".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesImageMessageCollection}
       * @since 1.13
       */
      protected Insert(com.appspot.elevated_surge_702.crud.model.MessagesImageMessageCollection content) {
        super(Crud.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "image.list".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends CrudRequest<com.appspot.elevated_surge_702.crud.model.MessagesImageMessageCollection> {

      private static final String REST_PATH = "image";

      /**
       * Create a request for the method "image.list".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Crud.this, "GET", REST_PATH, null, com.appspot.elevated_surge_702.crud.model.MessagesImageMessageCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Review collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Crud crud = new Crud(...);}
   *   {@code Crud.Review.List request = crud.review().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Review review() {
    return new Review();
  }

  /**
   * The "review" collection of methods.
   */
  public class Review {

    /**
     * Create a request for the method "review.delete".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Delete delete() throws java.io.IOException {
      Delete result = new Delete();
      initialize(result);
      return result;
    }

    public class Delete extends CrudRequest<Void> {

      private static final String REST_PATH = "review";

      /**
       * Create a request for the method "review.delete".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Delete() {
        super(Crud.this, "DELETE", REST_PATH, null, Void.class);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("items.users_changed.time_zone_offset")
      private java.util.List<java.lang.Long> itemsUsersChangedTimeZoneOffset;

      /**

       */
      public java.util.List<java.lang.Long> getItemsUsersChangedTimeZoneOffset() {
        return itemsUsersChangedTimeZoneOffset;
      }

      public Delete setItemsUsersChangedTimeZoneOffset(java.util.List<java.lang.Long> itemsUsersChangedTimeZoneOffset) {
        this.itemsUsersChangedTimeZoneOffset = itemsUsersChangedTimeZoneOffset;
        return this;
      }

      @com.google.api.client.util.Key("items.owner")
      private java.util.List<java.lang.String> itemsOwner;

      /**

       */
      public java.util.List<java.lang.String> getItemsOwner() {
        return itemsOwner;
      }

      public Delete setItemsOwner(java.util.List<java.lang.String> itemsOwner) {
        this.itemsOwner = itemsOwner;
        return this;
      }

      @com.google.api.client.util.Key("items.users_changed.milliseconds")
      private java.util.List<java.lang.Long> itemsUsersChangedMilliseconds;

      /**

       */
      public java.util.List<java.lang.Long> getItemsUsersChangedMilliseconds() {
        return itemsUsersChangedMilliseconds;
      }

      public Delete setItemsUsersChangedMilliseconds(java.util.List<java.lang.Long> itemsUsersChangedMilliseconds) {
        this.itemsUsersChangedMilliseconds = itemsUsersChangedMilliseconds;
        return this;
      }

      @com.google.api.client.util.Key("items.uuid")
      private java.util.List<java.lang.String> itemsUuid;

      /**

       */
      public java.util.List<java.lang.String> getItemsUuid() {
        return itemsUuid;
      }

      public Delete setItemsUuid(java.util.List<java.lang.String> itemsUuid) {
        this.itemsUuid = itemsUuid;
        return this;
      }

      @com.google.api.client.util.Key("items.deleted")
      private java.util.List<java.lang.Boolean> itemsDeleted;

      /**

       */
      public java.util.List<java.lang.Boolean> getItemsDeleted() {
        return itemsDeleted;
      }

      public Delete setItemsDeleted(java.util.List<java.lang.Boolean> itemsDeleted) {
        this.itemsDeleted = itemsDeleted;
        return this;
      }

      @com.google.api.client.util.Key("items.reviews")
      private java.util.List<java.lang.String> itemsReviews;

      /**

       */
      public java.util.List<java.lang.String> getItemsReviews() {
        return itemsReviews;
      }

      public Delete setItemsReviews(java.util.List<java.lang.String> itemsReviews) {
        this.itemsReviews = itemsReviews;
        return this;
      }

      @com.google.api.client.util.Key("items.last_modified.time_zone_offset")
      private java.util.List<java.lang.Long> itemsLastModifiedTimeZoneOffset;

      /**

       */
      public java.util.List<java.lang.Long> getItemsLastModifiedTimeZoneOffset() {
        return itemsLastModifiedTimeZoneOffset;
      }

      public Delete setItemsLastModifiedTimeZoneOffset(java.util.List<java.lang.Long> itemsLastModifiedTimeZoneOffset) {
        this.itemsLastModifiedTimeZoneOffset = itemsLastModifiedTimeZoneOffset;
        return this;
      }

      @com.google.api.client.util.Key("items.name")
      private java.util.List<java.lang.String> itemsName;

      /**

       */
      public java.util.List<java.lang.String> getItemsName() {
        return itemsName;
      }

      public Delete setItemsName(java.util.List<java.lang.String> itemsName) {
        this.itemsName = itemsName;
        return this;
      }

      @com.google.api.client.util.Key("items.reviews_changed.time_zone_offset")
      private java.util.List<java.lang.Long> itemsReviewsChangedTimeZoneOffset;

      /**

       */
      public java.util.List<java.lang.Long> getItemsReviewsChangedTimeZoneOffset() {
        return itemsReviewsChangedTimeZoneOffset;
      }

      public Delete setItemsReviewsChangedTimeZoneOffset(java.util.List<java.lang.Long> itemsReviewsChangedTimeZoneOffset) {
        this.itemsReviewsChangedTimeZoneOffset = itemsReviewsChangedTimeZoneOffset;
        return this;
      }

      @com.google.api.client.util.Key("items.last_modified.milliseconds")
      private java.util.List<java.lang.Long> itemsLastModifiedMilliseconds;

      /**

       */
      public java.util.List<java.lang.Long> getItemsLastModifiedMilliseconds() {
        return itemsLastModifiedMilliseconds;
      }

      public Delete setItemsLastModifiedMilliseconds(java.util.List<java.lang.Long> itemsLastModifiedMilliseconds) {
        this.itemsLastModifiedMilliseconds = itemsLastModifiedMilliseconds;
        return this;
      }

      @com.google.api.client.util.Key("items.users")
      private java.util.List<java.lang.String> itemsUsers;

      /**

       */
      public java.util.List<java.lang.String> getItemsUsers() {
        return itemsUsers;
      }

      public Delete setItemsUsers(java.util.List<java.lang.String> itemsUsers) {
        this.itemsUsers = itemsUsers;
        return this;
      }

      @com.google.api.client.util.Key("items.reviews_changed.milliseconds")
      private java.util.List<java.lang.Long> itemsReviewsChangedMilliseconds;

      /**

       */
      public java.util.List<java.lang.Long> getItemsReviewsChangedMilliseconds() {
        return itemsReviewsChangedMilliseconds;
      }

      public Delete setItemsReviewsChangedMilliseconds(java.util.List<java.lang.Long> itemsReviewsChangedMilliseconds) {
        this.itemsReviewsChangedMilliseconds = itemsReviewsChangedMilliseconds;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "review.insert".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesReviewMessageCollection}
     * @return the request
     */
    public Insert insert(com.appspot.elevated_surge_702.crud.model.MessagesReviewMessageCollection content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends CrudRequest<Void> {

      private static final String REST_PATH = "review";

      /**
       * Create a request for the method "review.insert".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesReviewMessageCollection}
       * @since 1.13
       */
      protected Insert(com.appspot.elevated_surge_702.crud.model.MessagesReviewMessageCollection content) {
        super(Crud.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "review.list".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends CrudRequest<com.appspot.elevated_surge_702.crud.model.MessagesReviewMessageCollection> {

      private static final String REST_PATH = "review";

      /**
       * Create a request for the method "review.list".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Crud.this, "GET", REST_PATH, null, com.appspot.elevated_surge_702.crud.model.MessagesReviewMessageCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Revobject collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Crud crud = new Crud(...);}
   *   {@code Crud.Revobject.List request = crud.revobject().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Revobject revobject() {
    return new Revobject();
  }

  /**
   * The "revobject" collection of methods.
   */
  public class Revobject {

    /**
     * Create a request for the method "revobject.delete".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Delete delete() throws java.io.IOException {
      Delete result = new Delete();
      initialize(result);
      return result;
    }

    public class Delete extends CrudRequest<Void> {

      private static final String REST_PATH = "revobject";

      /**
       * Create a request for the method "revobject.delete".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Delete() {
        super(Crud.this, "DELETE", REST_PATH, null, Void.class);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("items.uuid")
      private java.util.List<java.lang.String> itemsUuid;

      /**

       */
      public java.util.List<java.lang.String> getItemsUuid() {
        return itemsUuid;
      }

      public Delete setItemsUuid(java.util.List<java.lang.String> itemsUuid) {
        this.itemsUuid = itemsUuid;
        return this;
      }

      @com.google.api.client.util.Key("items.last_modified")
      private java.util.List<java.lang.String> itemsLastModified;

      /**

       */
      public java.util.List<java.lang.String> getItemsLastModified() {
        return itemsLastModified;
      }

      public Delete setItemsLastModified(java.util.List<java.lang.String> itemsLastModified) {
        this.itemsLastModified = itemsLastModified;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "revobject.insert".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesReviewObjectMessageCollection}
     * @return the request
     */
    public Insert insert(com.appspot.elevated_surge_702.crud.model.MessagesReviewObjectMessageCollection content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends CrudRequest<Void> {

      private static final String REST_PATH = "revobject";

      /**
       * Create a request for the method "revobject.insert".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesReviewObjectMessageCollection}
       * @since 1.13
       */
      protected Insert(com.appspot.elevated_surge_702.crud.model.MessagesReviewObjectMessageCollection content) {
        super(Crud.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "revobject.list".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends CrudRequest<com.appspot.elevated_surge_702.crud.model.MessagesReviewObjectMessageCollection> {

      private static final String REST_PATH = "revobject";

      /**
       * Create a request for the method "revobject.list".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Crud.this, "GET", REST_PATH, null, com.appspot.elevated_surge_702.crud.model.MessagesReviewObjectMessageCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the User collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Crud crud = new Crud(...);}
   *   {@code Crud.User.List request = crud.user().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public User user() {
    return new User();
  }

  /**
   * The "user" collection of methods.
   */
  public class User {

    /**
     * Create a request for the method "user.delete".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Delete delete() throws java.io.IOException {
      Delete result = new Delete();
      initialize(result);
      return result;
    }

    public class Delete extends CrudRequest<Void> {

      private static final String REST_PATH = "user";

      /**
       * Create a request for the method "user.delete".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Delete() {
        super(Crud.this, "DELETE", REST_PATH, null, Void.class);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("last_modified")
      private java.lang.String lastModified;

      /**

       */
      public java.lang.String getLastModified() {
        return lastModified;
      }

      public Delete setLastModified(java.lang.String lastModified) {
        this.lastModified = lastModified;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String uuid;

      /**

       */
      public java.lang.String getUuid() {
        return uuid;
      }

      public Delete setUuid(java.lang.String uuid) {
        this.uuid = uuid;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "user.insert".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesUserMessage}
     * @return the request
     */
    public Insert insert(com.appspot.elevated_surge_702.crud.model.MessagesUserMessage content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends CrudRequest<Void> {

      private static final String REST_PATH = "user";

      /**
       * Create a request for the method "user.insert".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.elevated_surge_702.crud.model.MessagesUserMessage}
       * @since 1.13
       */
      protected Insert(com.appspot.elevated_surge_702.crud.model.MessagesUserMessage content) {
        super(Crud.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Users collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Crud crud = new Crud(...);}
   *   {@code Crud.Users.List request = crud.users().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Users users() {
    return new Users();
  }

  /**
   * The "users" collection of methods.
   */
  public class Users {

    /**
     * Create a request for the method "users.list".
     *
     * This request holds the parameters needed by the crud server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends CrudRequest<com.appspot.elevated_surge_702.crud.model.MessagesUserMessageCollection> {

      private static final String REST_PATH = "user";

      /**
       * Create a request for the method "users.list".
       *
       * This request holds the parameters needed by the the crud server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Crud.this, "GET", REST_PATH, null, com.appspot.elevated_surge_702.crud.model.MessagesUserMessageCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Crud}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Crud}. */
    @Override
    public Crud build() {
      return new Crud(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CrudRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCrudRequestInitializer(
        CrudRequestInitializer crudRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(crudRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
